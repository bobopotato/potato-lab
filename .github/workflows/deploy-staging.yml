name: Deploy for staging

on:
  push:
    branches:
      - staging

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Staging
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Get Previous PR Branch
        id: get-pr-branch
        run: |
          PR=$(gh pr list --base staging --state merged --limit 1 --json headRefName --jq '.[].headRefName') 
          echo "Previous PR Branch: $PR" 
          echo "::set-output name=pr_branch::$PR"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy
        run: |
          echo "Deploying to Staging Environment" 
          echo "Previous PR Branch was ${{ steps.get-pr-branch.outputs.pr_branch }}"
          npx nx affected -t deploy --base=origin/staging --head=${{ steps.get-pr-branch.outputs.pr_branch }}
        env:
          SERVERLESS_ACCESS_KEY: ${{ vars.SERVERLESS_ACCESS_KEY }}
