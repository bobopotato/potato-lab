name: Deploy for production

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Production
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      STAGE: production
      ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
      REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}
      AWS_SG_REGION: ap-southeast-1
      BASE_AWS_LAMBDA_URL: https://e7b7fq4w54.execute-api.ap-southeast-1.amazonaws.com
      AWS_SQS_JOB_SCRAPPER_ANALYZE_QUEUE_NAME: https://sqs.ap-southeast-1.amazonaws.com/767397903484/jobScrapperAnalyzeQueue-production
      AWS_SQS_JOB_SCRAPPER_PROCESS_QUEUE_NAME: https://sqs.ap-southeast-1.amazonaws.com/767397903484/jobScrapperProcessQueue-production
      AWS_SCRAPPER_LAMBDA_ARN: arn:aws:lambda:ap-southeast-1:767397903484:function:serverless-potato-lab-production-scrapperApi
      AWS_SCRAPPER_LAMBDA_NAME: serverless-potato-lab-production-scrapperApi
      AWS_RULE_ARN: arn:aws:events:ap-southeast-1:767397903484:rule
    steps:
      - run: |
          echo "Deploying to Staging Environment with database URL: $DATABASE_URL"
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Deploy
        run: |
          echo "Deploying to Production Environment" 
          npx nx affected -t deploy -c production --base=origin/main~1 --head=origin/main
        env:
          SERVERLESS_ACCESS_KEY: ${{ vars.SERVERLESS_ACCESS_KEY }}
