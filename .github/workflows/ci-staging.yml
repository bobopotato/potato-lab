name: CI for PR

on:
  pull_request:
    branches:
      - staging
    types:
      - opened
      - synchronize

permissions:
  actions: read
  contents: read

jobs:
  lintTestBuild:
    runs-on: ubuntu-latest
    environment: Staging
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      STAGE: staging
      ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET }}
      REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}
      AWS_SG_REGION: ap-southeast-1
      BASE_AWS_LAMBDA_URL: https://9vi1jgliwh.execute-api.ap-southeast-1.amazonaws.com
      AWS_SQS_JOB_SCRAPPER_ANALYZE_QUEUE_NAME: https://sqs.ap-southeast-1.amazonaws.com/767397903484/jobScrapperAnalyzeQueue-staging
      AWS_SQS_JOB_SCRAPPER_PROCESS_QUEUE_NAME: https://sqs.ap-southeast-1.amazonaws.com/767397903484/jobScrapperProcessQueue-staging
      AWS_SCRAPPER_LAMBDA_ARN: arn:aws:lambda:ap-southeast-1:767397903484:function:serverless-potato-lab-staging-scrapperApi
      AWS_SCRAPPER_LAMBDA_NAME: serverless-potato-lab-staging-scrapperApi
      AWS_RULE_ARN: arn:aws:events:ap-southeast-1:767397903484:rule
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # This enables task distribution via Nx Cloud
      # Run this command as early as possible, before dependencies are installed
      # Learn more at https://nx.dev/ci/reference/nx-cloud-cli#npx-nxcloud-startcirun
      # Uncomment this line to enable task distribution
      # - run: npx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="e2e-ci"

      # Cache node_modules
      - uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - run: npx cypress install
      - uses: nrwl/nx-set-shas@v4

      # Prepend any command with "nx-cloud record --" to record its logs to Nx Cloud
      # - run: npx nx-cloud record -- echo Hello World
      # Nx Affected runs only tasks affected by the changes in this PR/commit. Learn more: https://nx.dev/ci/features/affected
      # When you enable task distribution, run the e2e-ci task instead of e2e
      - run: npx nx affected -t lint test build -c staging
        env:
          SERVERLESS_ACCESS_KEY: ${{ vars.SERVERLESS_ACCESS_KEY }}
